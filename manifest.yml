type: install
id: wordpress-standalone
name: WordPress Standalone Kit
categories:
  - apps/blogs
  - apps/content-management
logo: https://raw.githubusercontent.com/jelastic-jps/wordpress/master/images/wp-standalone.png
homepage: http://wordpress.org/
description:
  text: WordPress Standalone with built-in kit for choosing optimal application servers and a set of advanced features for running websites and blogs. WordPress CMS deployed as a lightweight standalone container with minimal allocated resources for cost efficiency.
  short: WordPress Standalone with built-in kit for choosing optimal application servers and a set of advanced features for running websites and blogs

baseUrl: https://raw.githubusercontent.com/sych74/wordpress/v3.0.0

onBeforeInstall: /scripts/beforeinstall.js?_r=${fn.random}
nodes: definedInOnBeforeInstall

skipNodeEmails: true

mixins:
  - https://raw.githubusercontent.com/jelastic-jps/wordpress/master/configs/vers.yaml
  - https://raw.githubusercontent.com/sych74/wordpress/v3.0.0/configs/additionalGlobals.yaml

settings:
  fields:  
    - caption: Advanced Features
      type: displayfield
      name: displayfield
      markup:
 
    - caption: Install LiteSpeed High-Performance Web Server
      type: checkbox
      name: ls_addon
      value: true
      disabled: false
      tooltip: "If this option is disabled, the cluster will be installed using NGINX load balancer and application servers"
      showIf:
        true:
          - caption: WordPress Brute Force Attack Protection
            type: checkbox
            name: wp_protect
            value: true
            disabled: false
            tooltip: "Secure WordPress Admin Panel with <a href='https://www.litespeedtech.com/support/wiki/doku.php/litespeed_wiki:config:wordpress-protection'>LiteSpeed Brute Force Protection</a> that limits failed login attempts. Default action is <b>Throttle</b> and number of allowed attempts is <b>100</b>"

          - caption: Web Application Firewall
            type: checkbox
            name: waf
            value: true
            disabled: false
            tooltip: "Protect web sites with <a href='https://www.litespeedtech.com/support/wiki/doku.php/litespeed_wiki:waf'>LiteSpeed built-in WAF</a> based on Free ModSecurity Rules from Comodo"

        false:
          - caption: WordPress Brute Force Attack Protection
            type: checkbox
            name: wp_protect
            value: false
            disabled: true
            tooltip: "Secure WordPress Admin Panel with <a href='https://www.litespeedtech.com/support/wiki/doku.php/litespeed_wiki:config:wordpress-protection'>LiteSpeed Brute Force Protection</a> that limits failed login attempts. Default action is <b>Throttle</b> and number of allowed attempts is <b>100</b>"
        
          - caption: Web Application Firewall
            type: checkbox
            name: waf
            value: false
            disabled: true
            tooltip: "Protect web sites with <a href='https://www.litespeedtech.com/support/wiki/doku.php/litespeed_wiki:waf'>LiteSpeed built-in WAF</a> based on Free ModSecurity Rules from Comodo"
             
    - caption: Install Let's Encrypt SSL with Auto-Renewal
      type: checkbox
      name: le_addon
      value: true
      disabled: false
      tooltip: "Advanced integration with Let's Encrypt certificate authority that simplifies and automates the process of issuing, configuring and updating trusted custom SSL certificates."

    - caption: Install Lightning-Fast Premium CDN
      type: checkbox
      name: cdn_addon
      value: true
      disabled: false
      tooltip: "Jelastic CDN is an HTTP/3 premium content delivery network of 160+ Super PoPs (points of presence) with bandwidth capacity up to 115 Tbps, advanced caching and acceleration strategies based on best-in-class IP Anycast technology."

    - caption: Install WordPress Multisite Network
      type: checkbox
      name: mu_addon
      value: false
      disabled: false
      tooltip: "Multisite is a type of WordPress installation that allows you to create and manage a network of multiple websites from a single WordPress dashboard. This lets you easily make changes and keep all of your websites updated from one place."

    - type: displayfield
      hideLabel: true
      hidden: true
      name: bl_count   
      markup:

globals:
  is_single_deploy: ${settings.is_single_deploy:true}
  db_user: jelastic-${fn.random}
  db_pass: ${fn.password(10)}
  db_host: 127.0.0.1
  protocol: http
  wp_admin_pass: ${fn.password(10)}
  success: success
  email: default

onInstall:
  - setupCP
  - initLEwebroot
  
  - if (${globals.is_single_deploy}):
    
    - script: |
        return {
          result:0,
          ssl: jelastic.billing.account.GetQuotas('environment.jelasticssl.enabled').array[0].value
        }
    
    - if (${response.ssl} || ${settings.le_addon:false}):
        setGlobals:
          protocol: https
        
    - script: ${globals.wp_cluster_path}/scripts/idna.js
    - setGlobals:
        domain: ${response.domain}         
    
    - createDBuser

    - installWordpress
  
    - if (${settings.mu_addon:false}): configureMultisite
    
    - if (${settings.le_addon:false}): 
      - installLEaddon
      - setupLEdomain

    - if (${settings.cdn_addon:false}): installEdgeportCDN
    
  - else:
      firewallRules
            
actions:
  
  firewallRules:
    - script[cp]: ${baseUrl}/scripts/firewallRules.js?_r=${fn.random}
      ports: '3306'
      name: MySQL

  installLEaddon:
    - install: https://github.com/jelastic-jps/lets-encrypt/blob/master/manifest.jps?_r=${fn.random}
      nodeGroup: cp
      skipEmail: true
      settings:
        customDomains: ${globals.domain}
        fallbackToX1: true

  initLEwebroot:
    - cmd[cp]: |-
        [ ! -d /var/lib/jelastic/keys/letsencrypt ] && mkdir -p /var/lib/jelastic/keys/letsencrypt;
        echo "webroot=true" > /var/lib/jelastic/keys/letsencrypt/settings-custom;
        echo "webrootPath=/var/www/webroot/ROOT" >> /var/lib/jelastic/keys/letsencrypt/settings-custom;
      user: root

  setupLEdomain:
    - cmd[cp]: source /opt/letsencrypt/settings && echo $domain
    - set:
        domain: ${response.out}
    - cmd[${nodes.cp.master.id}]: bash ~/bin/setupWP.sh --DOMAIN https://${this.domain}

  installEdgeportCDN:
    - install: https://raw.githubusercontent.com/edgeport/cdn/master/manifest.yml?_r=${fn.random}
      nodeGroup: cp
      skipEmail: true
      settings:
        note: ${settings.noteCDN:}
    - script: return jelastic.dev.scripting.Eval("c05ffa5b45628a2a0c95467ebca8a0b4", session, "cdn.info", {partnerCode:1})
    - setGlobals:
        cdnURL: ${globals.protocol}://${env.envName}-${response.response.partnerCode}.cdn.jelastic.net/
        cdn: ${env.envName}-${response.response.partnerCode}.cdn.jelastic.net
        success: success-cdn
        email: cdn
    - cmd[${nodes.cp.master.id}]: |-
        wget ${globals.wp_cluster_path}/scripts/checkCdnContent.txt?_r=${fn.random} -O ~/bin/checkCdnContent.txt &>> /var/log/run.log;
        bash ~/bin/setupWP.sh --edgeportCDN true --cdnURL ${globals.cdn};

  configureMultisite:
    - install: ${globals.wp_cluster_path}/addon/WPMU.jps
      settings:
        mode: subdir

  installWordpress:
    - install: ${globals.wp_cluster_path}/scripts/installWP.jps
      settings:
        db_host: ${globals.db_host}
        db_user: ${globals.db_user}
        db_pass: ${globals.db_pass}
        wp_admin_pass: ${globals.wp_admin_pass}
        wp_title: "Hello World"
        wp_url: ${globals.protocol}://${globals.domain}/
        version_wordpress: ${globals.version_wordpress}
        cluster: false

  setupCP:
    - install: https://raw.githubusercontent.com/jelastic/templates/master/config_v2.jps?_r=${fn.random}
      settings:
        targetGroup: cp
        targetNodes: cp
        optimization: wordpress
    
  createDBuser:
    - cmd [cp]: |-
        wget ${baseUrl}/configs/wordpress.cnf -O /etc/mysql/conf.d/wordpress.cnf &>> /var/log/run.log;
        wget ${globals.db_cluster_path}/scripts/setupUser.sh -O ~/setupUser.sh &>> /var/log/run.log;
        bash ~/setupUser.sh ${globals.db_user} ${globals.db_pass} &>> /var/log/run.log;
        jem passwd set -p ${globals.db_pass} &>> /var/log/run.log;
      user: root
